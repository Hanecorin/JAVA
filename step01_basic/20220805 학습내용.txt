예외

1. 처리 가능한 경미한 상황
	- 예외의 모든 클래스는 반드시 java.lang.Exception 상속

2. 예외 종류
	컴파일 예외
		try~catch와 같은 처리 문장 필수
	실행 예외
		try~catch 문장 옵션
		문제있는 부분의 값만 수정도 가능
		배열의 index 문제 또는 null 문제 등 
		java.lang.RuntimeException의 하위 클래스로 개발
		
3. 처리 문장
	1. 발생 될 만한 로직이 구현된 영역에서 직접 처리
		try~catch
			
	2. 발생된 경우에 호출한곳으로 예외 처리 위임		
		메소드 선언구에서 throws로 처리 
	
	3. 의미가 있는 새로운 예외킁애스 개발
		- 필요성 : 예외 클래스명으로 상황 파악 및 인지를 위한 메세지 전달
		- 개발 방법
			java.lang.Exception 상솓
			기본 생성자 / 문자열 초기화하는 생성자

4. 예외 관련 문법
	- 로직에 따른 예외 상황을 직접 구성할 경우 예외 발생 문법
		new 예외클래스생성자("메세지")
		- 이 코드가 적용된 모든 메소드 선언구에 throws 예외 문장 필수